syntax = "proto3";
package backend_api;
import "google/protobuf/timestamp.proto";

/// Describes the actions a user is able to take against a bucket.-
/// Used for Access-Control of bucket.
message BucketPermission {
  bool registered_users_only = 1;
  bool view_permission = 2;
  bool read_permission = 3;
  bool write_permission = 4;
  bool delete_file_permission = 5;
  bool delete_bucket_permission = 6;
  bool share_bucket_permission = 7;
  bool clone_permission = 8;
  bool search_permission = 9;
}

message CreateBucketShareTokenRequest {
  string user_id = 1;
  string bucket_id = 2;
  optional google.protobuf.Timestamp expires = 3;
  optional uint32 usages = 4;
  BucketPermission share_link_permission = 5;
}

message CreateBucketShareTokenResponse { string token = 1; }

/// Creates a secrete share link for a bucket. Note that it's up to the user to create the actual link to share, this request is purely to register that a secrete share link existence
/// for the bucket the access-control restrictions that are in place to access the bucket.
/// A signature is also that will be used to lookup this information.
message RegisterBucketSecreteShareLinkTokenRequest {
  string user_id = 1;
  string bucket_id = 2;
  optional google.protobuf.Timestamp expires = 3;
  optional uint32 usages = 4;
  BucketPermission permissions = 5;
  /// Token is the hashed encryption key.
  optional string token = 15;
  /// Ed22519 signature of the secrete link.
  optional string signature = 16;
}

message RegisterBucketSecreteShareLinkTokenResponse {
  string token = 1;
}


message GetBucketShareLinksPaginatableRequest {
  string user_id = 1;
  string bucket_id = 2;
  optional string token = 3;
  /// For pagination
  optional string continuation_token = 4;
  bool should_paginate = 5;
}

message GetBucketShareLinksPaginatableResponse {
  /// Note that this is a special format that needs to be parsed. The format is described in documentation.
  repeated string secret_share_link_urls = 1;
  repeated string share_link_urls = 2;
  optional string continuation_token = 3;
}

message DeleteBucketShareLinksRequest { repeated string urls = 1; }

message DeleteBucketShareLinksResponse { repeated string urls = 1; }

message DeleteUsersFromSharedBucketRequest {
  string bucket_id = 1;
  repeated string user_ids = 2;
}

message DeleteUsersFromSharedBucketResponse {}

message SharedUser {
  string user_id = 1;
  BucketPermission permissions = 2;
  string username = 3;
  string email = 4;
}

message GetBucketSharedUsersRequest { string bucket_id = 1; }

message GetBucketSharedUsersResponse {
  string owner_id = 1;
  string owner_username = 2;
  repeated SharedUser shared_users = 3;
}

message GetUserBucketPermissionsRequest {
  string bucket_id = 1;
  string user_id = 2;
}

message GetUserBucketPermissionsResponse {
  BucketPermission permission = 1;
}

message InviteUserToBucketRequest {
  oneof user {
    string user_id = 1;
    string email = 2;
    string username = 3;
  }
}

message InviteUserToBucketResponse {}
