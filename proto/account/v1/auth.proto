syntax = "proto3";
package account;
// https://docs.rs/opaque-ke/latest/opaque_ke/
// Will use opaque-ke for registration and login.
// From opaque-ke we will get a session token. This token can later be used to
// create a JWT token for API usage.
message CreateAccountStartRequest {
  bytes oprf = 1; // OPAQUE Registration message.
  string email = 2;
  string captcha = 3;
}

message CreateAccountStartResponse {
  bytes oprf = 1; // OPAQUE Registration message.
  string session_id = 2;
}

message CreateAccountFinishRequest {
  string username = 1;
  bytes oprf = 2; // OPAQUE Registration message.
  string session_id = 3;
  bytes public_signing_key = 4; // The signing key that is used by the server to
                                // verify user signatures.
}

message CreateAccountFinishResponse { string jwt_token = 1; }

message AccountLoginStartRequest {
  string email = 1;
  bytes oprf = 2; // OPAQUE login message.
}

message AccountLoginStartResponse {
  bytes oprf = 1; // OPAQUE login message.
  string session_id = 2;
  bool is_totp_code_required = 3;
}

message AccountLoginFinishRequest {
  bytes oprf = 1; // OPAQUE login message.
  string session_id = 2;
  optional string totp_code = 3;
}

message AccountLoginFinishResponse { string jwt_token = 1; }

// 2FA Setup and Verification. Will use TOTP. Will require the user to verify
// the 2FA code with verifie message. Until then it's just temporary. Client ->
// SetupTwoFactorAuthenticationRequest -> Server Client <-
// SetupTwoFactorAuthenticationResponse <- Server Client ->
// SetupVerifyTwoFactorAuthenticationRequest -> Server Client <-
// SetupVerifyTwoFactorAuthenticationResponse <- Server
// First the user gets the secrete, the user stores the secrete, the user uses the secrete to compute the first totp code and send that in for verification.
message SetupTwoFactorAuthenticationRequest {}

message SetupTwoFactorAuthenticationResponse { string totp_secrete = 1; }

message SetupTwoFactorAuthenticationVerifyRequest { string totp_code = 1; }
/// Will return a status error message if totp_code is invalid.
message SetupTwoFactorAuthenticationVerifyResponse {}
/// Invalidates the users JWT-token.
message AccountLogoutRequest { string token = 1; }

message AccountLogoutResponse {}

// OPAQUE Registration.
// OPAQUE Login.
// message OpaqueRegistration {
//   string username = 1;

// }
